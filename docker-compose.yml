services:
  postgres_db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"

  mongo_db:
    image: mongo:6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
    ports:
      - "27018:27017"

  app:
    image: app:v2
    build: .
    restart: always
    env_file: .env
    environment:
      # POSTGRES_HOST: ${POSTGRES_HOST_NEW}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_DB: ${MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    expose: 
      - "8000"
    depends_on:
      - postgres_db
      - mongo_db
    volumes:
      - ./app:/app
    deploy:
      # replicas: 2
      restart_policy:
        condition: always

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - app

volumes:
  postgres_data:
  mongo_data:
